#include "holberton.h"
#include <stdlib.h>
#include <stdio.h>
int arraylen(char *str)
{
  int a = 0;
  int count = 0;

  if (str[0] != ' ')
    {
      count++;
    }
  for (; str[a]; a++)
    {
      if (str[a] == ' ' && str[a + 1] != ' ')
	{
	  count++;
	}
    }
  return (count);
}

/**
 * strtow - check the code for Holberton School students.
 * @str:string origin
 * Return:a pointer my_str
 */

char **strtow(char *str)
{
	char **my_str;
	int count, idx = 0;
	int y, x, w, sub_idx;

	if (str == NULL)
	{
		return (NULL);
	}
	count = arraylen(str);
		
	my_str = (char **)malloc(sizeof(char *) * count);
	if (my_str == NULL)
       	{
	  free(my_str);
	  return (NULL);
	}

	int z = 0;
	for (x = 0; str[x] != '\0'; x++)
	  {
       	    if (str[x] != ' ')
	    { 
	    
	      count = 0;
	      for (y = x; str[y] != ' ' && str[y] != '\0' ; y++)
	     	  {
	     	    count++; // lenght of word
	     	  }	 

	      my_str[z] = (char *)malloc(sizeof(char) * (count + 1)); // malloc per word	      
	      if (my_str == NULL)
	     	  {
	     	    for (w = 0; w < x; w++)
	     	      {
	     		free(my_str[w]);
	     	      }
	    	    free(my_str);
	    	    return (NULL); 
	     	  }
	      
	    }
	    
	    for (w = 0; str[x] != '\0'; w++, x++) // fill
	      {
		my_str[z][w] = str[x];
		
	      }
	    my_str[z][w] = '\0';
	    z++;

	    

	    /* 			
	    /* 	my_str[idx] = malloc(sizeof(char) * count + 1); */
	    /* 	if (my_str == NULL) */
	    /* 	  { */
	    /* 	    for (w = 0; w < idx; w++) */
	    /* 	      { */
	    /* 		free(my_str[w]); */
	    /* 	      } */
	    /* 	    free(my_str); */
	    /* 	    return (NULL); */
	    /* 	  } */
		
	    /* 	for (sub_idx = 0; sub_idx < y; sub_idx++) */
	    /* 		{ */
	    /* 			my_str[idx][sub_idx] = str[x]; */
	    /* 			x++; */
	    /* 		} */
	    /* 		my_str[y] = '\0'; */
	    /* 	}	idx++; */
	
	}				
	my_str[z] = NULL;
return (my_str);
}
